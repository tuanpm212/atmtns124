@{
    ViewBag.Title = "CreatePromotion";
    Layout = "~/Views/Share/_Backend.cshtml";
}
<section class="vbox" ng-app="MyApp" ng-controller="CtrlController">
    <section class="scrollable padder">
        <div class="m-b-md">
            <h3 class="m-b-none">Create/View Promotion</h3>
            <hr />
        </div>
        <section class="panel panel-default">
            <div class="panel-body">
                <form class="form-horizontal" name="promotionForm">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">@Resources.Backend.lblPromotionName</label>
                        <div class="col-sm-10">
                            <input id="Name" type="text" class="form-control" name="Name" ng-model="Name" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Description</label>
                        <div class="col-sm-10">
                            <input id="Description" type="text" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">From Date</label>
                        <div class="col-sm-2">
                            <input id="txtFromDate" type="text" class="form-control date-control" placeholder="@Resources.Order.placeholderChooseDate">
                        </div>
                        <label class="col-sm-2 control-label">To Date</label>
                        <div class="col-sm-2">
                            <input id="txtToDate" type="text" class="form-control date-control" placeholder="@Resources.Order.placeholderChooseDate">
                        </div>
                        <label class="col-sm-2 control-label">@Resources.Backend.lblDiscountPercent</label>
                        <div class="col-sm-2">
                            <input id="Percent" type="number" class="form-control" name="discount" ng-model="Discount" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-sm-offset-2">
                            <div class="checkbox">
                                <label>
                                    <input id="chkIsActvie" type="checkbox" />
                                    @Resources.Backend.lblActive
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <button type="submit" class="btn btn-primary" data-ng-click="addNew()">@Resources.CreateOrder.btnSave</button>
                            <button type="button" data-ng-click="AddItemPromotion()" class="btn btn-primary">@Resources.Backend.btnAdd</button>
                            <a href="/backend/promotion" class="btn btn-primary">Back to Promotion</a>
                        </div>
                    </div>
                </form>
            </div>
        </section>
        <div ui-grid="gridMaster" ui-grid-pagination class="myGrid table" style="height: 372px;"></div>
    </section>
    <div id="modalAddItem" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><i class="fa fa-warning"></i> Warning</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Product Name</label>
                            <div class="col-sm-4">
                                <input id="txtSearch" type="text" class="form-control" placeholder="Search product" />
                            </div>
                            <div class="col-sm-6">
                                <button id="btnSearch" type="submit" ng-click="getProduct()" class="btn btn-primary">Search</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Quantity</label>
                            <div class="col-sm-4">
                                <input id="txtQuantity" type="number" class="form-control" required />
                            </div>
                        </div>
                        <div ui-grid="gridSearch" ui-grid-pagination class="myGrid table" style="height: 372px;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnAddItem" type="submit" ng-click="AddItem()" class="btn btn-primary">Add Item</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section Styles {
    <link href="~/Contents/css/ui-grid.css" rel="stylesheet" />
    <link href="~/Contents/css/backend-ui-grid.css" rel="stylesheet" />
    <link href="~/Contents/css/datepicker.css" rel="stylesheet" />
}
@section Scripts {
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/ui-grid.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript">
        var PromotoinID = '@ViewBag.PromotoinID', StoreID = '@ViewBag.StoreID';
        $(".date-control").datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'mm/dd/yyyy',
            language: 'en',
        });
        $("#txtFromDate").datepicker('setDate', '@ViewBag.FromDate');
        $("#txtToDate").datepicker('setDate', '@ViewBag.ToDate');
        var app = angular.module('MyApp', ['ui.grid', 'ui.grid.pagination']);
        app.controller('CtrlController', ['$scope', '$http', 'uiGridConstants', function ($scope, $http, $apply, uiGridConstants) {
            $scope.gridMaster = {
                paginationPageSizes: [10, 20, 40],
                paginationPageSize: 10,
                columnDefs: [
                    { name: "ProdNo", displayName: "Code", },
                    { name: "ProductName", displayName: "Product Name", },
                    { name: "Quantity" },
                    { name: "", field: 'ProductID', displayName: "Action", cellTemplate: '<div class="ui-grid-cell-contents"><a ng-click="grid.appScope.Delete(row)">Delete</a></div>', cellClass: 'text-center', width: '150', enableSorting: false },
                ],
            };

            $scope.getPagedDataAsync = function (pageSize, page) {
                if (pageSize == null) {
                    $scope.gridMaster.paginationPageSize = 10;
                    pageSize = 10;
                }
                if (page == null) {
                    $scope.gridMaster.paginationCurrentPage = 1;
                    page = 1;
                }
                $http({
                    url: "/backend/GetPromotionItem",
                    method: "GET",
                    params: { ID: PromotoinID }
                }).success(function (data, status, headers, config) {
                    var temp = JSON.parse(data);
                    $scope.gridMaster.data = temp.detail;
                    $scope.myMaster = temp.master;
                    if ($scope.myMaster.PromotionID != 0) {
                        $('#Name').val($scope.myMaster.PromotionName);
                        $('#Description').val($scope.myMaster.Description);
                        $('#Percent').val($scope.myMaster.Percent);
                        $("#txtFromDate").datepicker('setDate', ForDateTime($scope.myMaster.FromDate));
                        $("#txtToDate").datepicker('setDate', ForDateTime($scope.myMaster.ToDate));
                        $('#chkIsActvie').prop('checked', $scope.myMaster.IsActive);
                    };
                }).error(function (myJson, status, headers, config) {
                    alert(JSON.stringify(myJson));
                });
            };

            $scope.getPagedDataAsync($scope.gridMaster.paginationCurrentPage, $scope.gridMaster.paginationPageSize);

            $scope.AddItemPromotion = function () {
                $scope.gridSearch.data = [];
                $('#modalAddItem').modal('show');
            };

            $scope.Delete = function (row) {
                var index = $scope.gridMaster.data.indexOf(row.entity);
                $scope.gridMaster.data.splice(index, 1);
            };

            $scope.addNew = function () {
                var master = {
                    PromotionID: PromotoinID,
                    StoreID: StoreID,
                    SiteID: 1,
                    PromotionName: $('#Name').val(),
                    FromDate: $('#txtFromDate').val(),
                    ToDate: $('#txtToDate').val(),
                    CreateDate: $('#txtFromDate').val(),
                    Description: $('#Description').val(),
                    Percent: $('#Percent').val(),
                    IsItem: 1,
                    IsActive: $('#chkIsActvie').is(':checked')
                };
                $http({
                    url: "/backend/SavePromotion",
                    method: "POST",
                    data: JSON.stringify({ master: master, detail: $scope.gridMaster.data }),
                    headers: { 'Content-Type': 'application/json' }
                }).success(function (data) {
                    if (data.IsOk) {
                        window.location.href = "/backend/promotion";
                    }
                });
            };

            $scope.gridSearch = {
                paginationPageSizes: [10, 20, 40],
                paginationPageSize: 10,
                columnDefs: [
                    { name: "checker", displayName: "", type: 'boolean', headerCellTemplate: '<div class="ui-grid-cell-contents"><input type="checkbox" ng-model="checker" ng-change="grid.appScope.toggleCheckerAll(checker)"></div>', cellTemplate: '<input type="checkbox" ng-model="row.entity.checker">', width: '100', cellClass: 'text-center', headerCellClass: 'text-center' },
                    { name: "ProdNo", displayName: "Code", },
                    { name: "ProductName", displayName: "Product Name" },
                    { name: "Price" },
                ],
            };

            $scope.getProduct = function () {
                $http({
                    url: "/backend/GetItemForPromotion",
                    method: "GET",
                    params: { StoreID: StoreID, TextSearch: $('#txtSearch').val() }

                }).success(function (data) {
                    $scope.gridSearch.data = JSON.parse(data);
                });
            };

            $scope.toggleCheckerAll = function (checked) {
                for (var i = 0; i < $scope.gridSearch.data.length; i++) {
                    $scope.gridSearch.data[i].checker = checked;
                }
            };

            $scope.AddItem = function () {
                var IsExist = false;
                for (var i = 0; i < $scope.gridSearch.data.length; i++) {
                    if ($scope.gridSearch.data[i].checker) {
                        IsExist = false;
                        for (var j = 0; j < $scope.gridMaster.data.length; j++) {
                            if ($scope.gridMaster.data[j].ProductID == $scope.gridSearch.data[i].ProductID) {
                                IsExist = true;
                                break;
                            }
                        }
                        if (IsExist == false) {
                            var item = {
                                PromotionID: PromotoinID,
                                ProductID: $scope.gridSearch.data[i].ProductID,
                                ProdNo: $scope.gridSearch.data[i].ProdNo,
                                ProductName: $scope.gridSearch.data[i].ProductName,
                                Quantity: $('#txtQuantity').val(),
                                Sort: $scope.gridSearch.data.length,
                                IsItem: 1,
                                IsActive: 1
                            };
                            $scope.gridMaster.data.push(item);
                        }
                    }
                }
                $('#modalAddItem').modal('hide');
            };
        }]);

        app.filter('resolve_date', function () {
            return function (text, length, end) {
                var mResult = '', twoDigitMonth;
                var mDate = new Date(parseInt(text.substr(6)));
                twoDigitMonth = ((mDate.getMonth().length + 1) === 1) ? (mDate.getMonth() + 1) : '0' + (mDate.getMonth() + 1);
                mResult = mDate.getDate() + "/" + twoDigitMonth + "/" + mDate.getFullYear();
                return mResult;
            };
        });

        function ForDateTime(jsonDate) {
            var date = new Date(parseInt(jsonDate.substr(6)));
            return ("0" + (date.getMonth() + 1)).slice(-2) + "/" +
                  ("0" + date.getDate()).slice(-2) + "/" + date.getFullYear();
        }
    </script>
}


