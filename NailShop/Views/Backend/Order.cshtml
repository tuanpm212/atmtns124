@{
    ViewBag.Title = "Order List";
    Layout = "~/Views/Share/_Backend.cshtml";
}

<section class="vbox" ng-app="MyApp" ng-controller="CtrlController">
    <section class="scrollable padder">
        <div class="m-b-md">
            <h3 class="m-b-none">Order List</h3>
            <hr />
        </div>
        <section class="panel panel-default">
            <div class="panel-body">
                <form class="form-inline" name="orderForm">
                    <div class="form-group">
                        <label>@Resources.Order.lblFromDate</label>
                        <input id="txtFromDate" type="text" class="form-control" placeholder="@Resources.Order.placeholderChooseDate" name="fromDate">
                    </div>
                    <div class="form-group">
                        <label>@Resources.Order.lblToDate</label>
                        <input id="txtToDate" type="text" class="form-control" placeholder="@Resources.Order.placeholderChooseDate" name="toDate" required>
                    </div>
                    <div class="form-group">
                        @Html.DropDownList("Status", new SelectList(ViewBag.ListStatus, "Status", "Name", "-1"), new { @class = "form-control" })
                    </div>
                    <button class="btn btn-primary" type="submit" data-ng-click="getPagedDataAsync()">@Resources.Order.btnSearch</button>
                </form>
            </div>
        </section>
        <div ui-grid="gridOptions" ui-grid-pagination class="myGrid table" style="height: 372px;"></div>
    </section>
</section>

@section Styles {
    <link href="~/Contents/css/ui-grid.css" rel="stylesheet" />
    <link href="~/Contents/css/backend-ui-grid.css" rel="stylesheet" />
    <link href="~/Contents/css/datepicker.css" rel="stylesheet" />  
}
@section Scripts {
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/ui-grid.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript">
        $(".date-control").datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'mm/dd/yyyy',
            language: 'en',
        });
        $("#txtFromDate").datepicker('setDate', '@ViewBag.FromDate');
        $("#txtToDate").datepicker('setDate', '@ViewBag.ToDate');

        var app = angular.module('MyApp', ['ui.grid', 'ui.grid.pagination']);
        app.controller('CtrlController', ['$scope', '$http', 'uiGridConstants', function ($scope, $http, $apply, uiGridConstants) {
            $scope.gridOptions = {
                paginationPageSizes: [10, 20, 40],
                paginationPageSize: 10,
                columnDefs: [
                    { name: "InvoiceNo", cellClass: 'text-center', width: '120' },
                    { name: "InvoiceDate", cellTemplate: '<div class="ui-grid-cell-contents"> {{row.entity.InvoiceDate | resolve_date}}</div>', cellClass: 'text-center', width: '120' },
                    { name: "Notes" },
                    { name: "FullName" },
                    { name: "SubTotal" },
                    { name: "SaleTax", width: '200', cellClass: 'text-right' },
                    { name: "Discount", width: '150', cellClass: 'text-right' },
                    { name: "Total", width: '200', cellClass: 'text-right' },
                    { name: "", field: 'InvoiceID', displayName: "Action", cellTemplate: '<div class="ui-grid-cell-contents"><a ng-href="/backend/createorder?id={{row.entity.InvoiceID}}"">View</a></div>', cellClass: 'text-center', width: '150', enableSorting: false },
                ],
            };

            $scope.getPagedDataAsync = function (pageSize, page) {
                if (pageSize == null) {
                    $scope.gridOptions.paginationPageSize = 10;
                    pageSize = 10;
                }
                if (page == null) {
                    $scope.gridOptions.paginationCurrentPage = 1;
                    page = 1;
                }
                $http({
                    url: "/Backend/GetOrderByStoreID",
                    method: "GET",
                    params: {
                        FromDate: $('#txtFromDate').val(),
                        ToDate: $('#txtToDate').val(),
                        Status: $('#Status').val()
                    }
                }).success(function (data, status, headers, config) {
                    $scope.gridOptions.data = JSON.parse(data);
                }).error(function (myJson, status, headers, config) {
                    alert(JSON.stringify(myJson));
                });
            };

            $scope.getPagedDataAsync($scope.gridOptions.paginationCurrentPage, $scope.gridOptions.paginationPageSize);
        }]);

        app.filter('resolve_date', function () {
            return function (text, length, end) {
                var mResult = '', twoDigitMonth;
                var mDate = new Date(parseInt(text.substr(6)));
                twoDigitMonth = ((mDate.getMonth().length + 1) === 1) ? (mDate.getMonth() + 1) : '0' + (mDate.getMonth() + 1);
                mResult = mDate.getDate() + "/" + twoDigitMonth + "/" + mDate.getFullYear();
                return mResult;
            };
        });
</script>
}
