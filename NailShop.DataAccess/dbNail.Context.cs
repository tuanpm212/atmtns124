//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NailShop.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NailShopEntities : DbContext
    {
        public NailShopEntities()
            : base("name=NailShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<SynCustomer> SynCustomers { get; set; }
        public virtual DbSet<SynProduct> SynProducts { get; set; }
        public virtual DbSet<SynOrderItem> SynOrderItems { get; set; }
        public virtual DbSet<SynInvoice> SynInvoices { get; set; }
        public virtual DbSet<vw_Brand> vw_Brand { get; set; }
        public virtual DbSet<vw_News> vw_News { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<BrandLang> BrandLangs { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NewsLang> NewsLangs { get; set; }
        public virtual DbSet<vw_Slide> vw_Slide { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<vw_About> vw_About { get; set; }
        public virtual DbSet<vw_Invoice> vw_Invoice { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<vw_Photo> vw_Photo { get; set; }
        public virtual DbSet<RefNo> RefNoes { get; set; }
        public virtual DbSet<OrdItem> OrdItems { get; set; }
        public virtual DbSet<ProductHot> ProductHots { get; set; }
        public virtual DbSet<vw_ProductHot> vw_ProductHot { get; set; }
        public virtual DbSet<About> Abouts { get; set; }
        public virtual DbSet<AboutLang> AboutLangs { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<PhotoDetail> PhotoDetails { get; set; }
        public virtual DbSet<PhotoLang> PhotoLangs { get; set; }
        public virtual DbSet<PhotoDetailLang> PhotoDetailLangs { get; set; }
        public virtual DbSet<vw_PhotoDetail> vw_PhotoDetail { get; set; }
        public virtual DbSet<vw_PromotionDetail> vw_PromotionDetail { get; set; }
        public virtual DbSet<PromotionDetail> PromotionDetails { get; set; }
        public virtual DbSet<vw_PromotionItem> vw_PromotionItem { get; set; }
        public virtual DbSet<vw_ProductPromotion> vw_ProductPromotion { get; set; }
        public virtual DbSet<Promotion> Promotions { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<vw_Category> vw_Category { get; set; }
        public virtual DbSet<Slide> Slides { get; set; }
        public virtual DbSet<SlideLang> SlideLangs { get; set; }
    
        [DbFunction("NailShopEntities", "GetOrdItem")]
        public virtual IQueryable<GetOrdItem_Result> GetOrdItem(Nullable<int> storeID, Nullable<long> customerID, Nullable<long> invoiceID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetOrdItem_Result>("[NailShopEntities].[GetOrdItem](@StoreID, @CustomerID, @InvoiceID)", storeIDParameter, customerIDParameter, invoiceIDParameter);
        }
    
        [DbFunction("NailShopEntities", "GetOrdItemByID")]
        public virtual IQueryable<GetOrdItemByID_Result> GetOrdItemByID(Nullable<long> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetOrdItemByID_Result>("[NailShopEntities].[GetOrdItemByID](@InvoiceID)", invoiceIDParameter);
        }
    }
}
